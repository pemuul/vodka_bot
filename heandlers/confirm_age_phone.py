from aiogram import Router, F, Bot, BaseMiddleware
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, Update, BotCommandScopeDefault, FSInputFile, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton, PhotoSize, Document, Audio, Video, Voice, VideoNote, Sticker, Animation
from aiogram.enums import ParseMode
import os
import sys
import json
from pathlib import Path
from typing import Optional, Callable, Awaitable, Any, Union, Type

from heandlers import menu, pyments, web_market, settings_bot, commands
#from keys import ADMIN_ID_LIST
import sql_mgt
#from sql_mgt import sql_mgt.insert_user, sql_mgt.get_visit, sql_mgt.set_param, sql_mgt.get_users_per_day, sql_mgt.add_admin, sql_mgt.is_normal_invite_admin_key, sql_mgt.get_last_order
#from heandlers.web_market import start, send_item_message
#from site_bot.orders_mgt import get_all_data_order


router = Router()  # [1]
global_objects = None

def init_object(global_objects_inp):
    global global_objects

    global_objects = global_objects_inp
    global_objects.dp.message.outer_middleware(AgePhoneCheckMiddleware())
    #global_objects.dp.update.middleware.register(SaveIncomingFiles())
    menu.init_object(global_objects)
    sql_mgt.init_object(global_objects)
    settings_bot.init_object(global_objects)
    commands.init_object(global_objects)

class AgePhoneCheckMiddleware(BaseMiddleware):
    """
    –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å–µ Message (outer), –ø—Ä–æ–≤–µ—Ä—è–µ—Ç:
      1) –ï—Å–ª–∏ –ø–æ–ª–µ age_18=False ‚Üí –±–ª–æ–∫–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç inline-–∫–Ω–æ–ø–∫—É ‚Äú–ú–Ω–µ –µ—Å—Ç—å 18 –ª–µ—Ç‚Äù.
      2) –ï—Å–ª–∏ age_18=True, –Ω–æ phone=None ‚Üí –±–ª–æ–∫–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç Reply-–∫–Ω–æ–ø–∫—É ‚Äú–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞‚Äù.
      3) –ï—Å–ª–∏ –ø—Ä–∏—à—ë–ª Message —Å contact ‚Üí –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –µ–≥–æ –¥–∞–ª—å—à–µ, —á—Ç–æ–±—ã —Å—Ä–∞–±–æ—Ç–∞–ª —Ö–µ–Ω–¥–ª–µ—Ä @router.message(F.contact).
      4) –ö–∞–∫ —Ç–æ–ª—å–∫–æ –æ–±–∞ –ø–æ–ª—è –≤ –±–∞–∑–µ (age_18 –∏ phone) –∑–∞–ø–æ–ª–Ω–µ–Ω—ã ‚Üí –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫ –æ–±—ã—á–Ω—ã–º —Ö–µ–Ω–¥–ª–µ—Ä–∞–º.
    """

    async def __call__(self, handler, event: Message, data: dict) -> any:
        # 1) –ï—Å–ª–∏ –ø—Ä–∏—à—ë–ª –∫–æ–Ω—Ç–∞–∫—Ç ‚Äì –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∞–ª—å—à–µ (–¥–æ–ª–∂–µ–Ω —Å—Ä–∞–±–æ—Ç–∞—Ç—å —Ö–µ–Ω–¥–ª–µ—Ä @router.message(F.contact))
        await commands.delete_answer_messages(event)

        if event.contact:
            return await handler(event, data)

        # 2) –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        user = await sql_mgt.get_user_async(event.chat.id)
        if not user:
            await sql_mgt.insert_user(event)
            user = await sql_mgt.get_user_async(event.chat.id)

        # 3) –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
        if not user.get("age_18", False):
            inline_kb_age = InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="–ú–Ω–µ –µ—Å—Ç—å 18 –ª–µ—Ç",
                            callback_data="confirm_age"
                        )
                    ]
                ]
            )
            answer_message = await event.answer(
                "–ü—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤–∞–º –µ—Å—Ç—å 18 –ª–µ—Ç:\n\n"
                "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
                reply_markup=inline_kb_age
            )

            await commands.delete_answer_leater(answer_message)
            await sql_mgt.set_param(event.chat.id, 'DELETE_LAST_MESSAGE', 'yes')
            await commands.delete_this_message(event)
            return  # –ù–ï –≤—ã–∑—ã–≤–∞–µ–º handler(event, data) ‚Äì –±–ª–æ–∫–∏—Ä—É–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è

        # 4) –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        if not user.get("phone"):
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ReplyKeyboard —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π request_contact (–æ–¥–∏–Ω —à–∞–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞)
            await send_phone_request(event)
            return  # –°–Ω–æ–≤–∞ –±–ª–æ–∫–∏—Ä—É–µ–º –≤—Å—ë, –∫—Ä–æ–º–µ –Ω–∞–∂–∞—Ç–∏—è —ç—Ç–æ–π –∫–Ω–æ–ø–∫–∏

        # 5) –û–±–∞ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã ‚Äì –ø—É—Å–∫–∞–µ–º Message –¥–∞–ª—å—à–µ –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Ö–µ–Ω–¥–ª–µ—Ä–∞–º
        return await handler(event, data)
    

async def send_phone_request(message: Message):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç ReplyKeyboard —Å –∫–Ω–æ–ø–∫–æ–π ‚Äú–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞‚Äù (request_contact=True).
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ö–µ–Ω–¥–ª–µ—Ä–µ @router.callback_query(F.data == "start_phone_share").
    """
    reply_kb_contact = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(
                    text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
                    request_contact=True
                )
            ]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    answer_message = await message.answer(
        "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç:",
        reply_markup=reply_kb_contact
    )

    await commands.delete_answer_leater(answer_message)
    await sql_mgt.set_param(message.chat.id, 'DELETE_LAST_MESSAGE', 'yes')
    await commands.delete_this_message(message)


# ----------------------
# 2. CallbackQuery-—Ö–µ–Ω–¥–ª–µ—Ä: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞
# ----------------------
@router.callback_query(F.data == "confirm_age")
async def confirm_age_handler(call: CallbackQuery):
    """
    –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª ‚Äú–ú–Ω–µ –µ—Å—Ç—å 18 –ª–µ—Ç‚Äù:
      ‚Äì —Å–æ—Ö—Ä–∞–Ω—è–µ–º age_18=True –≤ –ë–î,
      ‚Äì —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–±–∏—Ä–∞—è inline-–∫–Ω–æ–ø–∫—É.
    """
    await sql_mgt.update_user_async(call.from_user.id, {"age_18": True})
    await call.answer("–í–æ–∑—Ä–∞—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω", show_alert=False)

    # –£–±–∏—Ä–∞–µ–º inline-–∫–Ω–æ–ø–∫—É –∏ –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
    try:
        await call.message.edit_text("‚úÖ –í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏, —á—Ç–æ –≤–∞–º –µ—Å—Ç—å 18 –ª–µ—Ç.")
        await send_phone_request(call.message)
    except:
        pass  # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º


# ----------------------
# 3. Message-—Ö–µ–Ω–¥–ª–µ—Ä: –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ (content_type=contact)
# ----------------------
@router.message(F.contact)
async def contact_handler(message: Message):
    """
    –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É ‚Äú–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞‚Äù (ReplyKeyboardMarkup ‚Üí request_contact),
    Telegram –ø—Ä–∏—Å—ã–ª–∞–µ—Ç Message.contact. –°–æ—Ö—Ä–∞–Ω—è–µ–º phone –≤ –ë–î –∏ —É–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
    """

    phone_number = message.contact.phone_number
    await sql_mgt.update_user_async(message.from_user.id, {"phone": phone_number})

    # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—É—é (–∏–ª–∏ –ø—É—Å—Ç—É—é) –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    answer_message = await message.answer(
        "–°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω—ë–Ω."
    )
    await commands.delete_answer_leater(answer_message)
    await sql_mgt.set_param(message.chat.id, 'DELETE_LAST_MESSAGE', 'yes')


    await commands.command_start_handler(message)


FILES_DIR = Path("files")

class SaveIncomingFiles(BaseMiddleware):
    # –±—ã–ª–æ: base_dir: str | Path
    def __init__(self, base_dir: Union[str, Path] = "files") -> None:
        self.base_dir = Path(base_dir)
        self.base_dir.mkdir(parents=True, exist_ok=True)

    async def __call__(
        self,
        handler: Callable[[Update, dict[str, Any]], Awaitable[Any]],
        event: Update,
        data: dict[str, Any]
    ):
        if event.message:                       # —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å Message-update
            bot: Bot = data["bot"]
            await self._save_attachments(bot, event.message)

        return await handler(event, data)

    # ---------- –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º–µ—Ç–æ–¥—ã ---------- #
    async def _save_attachments(self, bot: Bot, m: Message) -> None:
        """
        –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ç–∏–ø—ã –≤–ª–æ–∂–µ–Ω–∏–π –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º.
        """
        # üì∑ –§–æ—Ç–æ ‚Äî –±–µ—Ä—ë–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ
        if m.photo:
            await self._dl(bot, m.photo[-1], ".jpg")

        # üìÑ –î–æ–∫—É–º–µ–Ω—Ç
        if m.document:
            await self._dl(bot, m.document, Path(m.document.file_name or ".bin").suffix)

        # üéµ –ê—É–¥–∏–æ
        if m.audio:
            await self._dl(bot, m.audio, Path(m.audio.file_name or ".mp3").suffix)

        # üéûÔ∏è –í–∏–¥–µ–æ
        if m.video:
            await self._dl(bot, m.video, Path(m.video.file_name or ".mp4").suffix)

        # üéô –ì–æ–ª–æ—Å
        if m.voice:
            await self._dl(bot, m.voice, ".ogg")

        # üí¨ –í–∏–¥–µ–æ-–Ω–æ—Ç–∞
        if m.video_note:
            await self._dl(bot, m.video_note, ".mp4")

        # ü¶Ñ –°—Ç–∏–∫–µ—Ä (–æ–±—ã—á–Ω—ã–π/–∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
        if m.sticker:
            # *.webp, *.tgs –∏–ª–∏ *.webm –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ñ–æ—Ä–º–∞—Ç–∞
            ext = {
                "regular": ".webp",
                "video": ".webm",
                "animated": ".tgs",
            }.get(m.sticker.format.value, ".dat")
            await self._dl(bot, m.sticker, ext)

        # üéû GIF-–∞–Ω–∏–º–∞—Ü–∏—è
        if m.animation:
            await self._dl(bot, m.animation, Path(m.animation.file_name or ".gif").suffix)

    async def _dl(self, bot: Bot, obj, default_ext: str) -> None:
        """
        –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ª—é–±–æ–≥–æ Downloadable-–æ–±—ä–µ–∫—Ç–∞.
        –ò–º—è —Ñ–∞–π–ª–∞ —Å—Ç—Ä–æ–∏–º —Ç–∞–∫: <file_id><—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ>.
        """
        # file_id –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ FAT-32 (–±—É–∫–≤—ã/—Ü–∏—Ñ—Ä—ã/¬´_¬ª), –ø–æ—ç—Ç–æ–º—É –±–µ–∑–æ–ø–∞—Å–µ–Ω
        filename = f"{obj.file_id}{default_ext}"
        await bot.download(obj, destination=self.base_dir / filename)