from aiogram import Router, F
from aiogram.types import CallbackQuery

from heandlers import menu
#from sql_mgt import sql_mgt.set_param
import sql_mgt


router = Router()
global_objects = None

def init_object(global_objects_inp):
    global global_objects

    global_objects = global_objects_inp
    menu.init_object(global_objects)
    sql_mgt.init_object(global_objects)

'''
@router.callback_query(F.data.startswith("b_"))
async def callbacks_num(callback: CallbackQuery):
    print(callback.data)
    path_id = callback.data.split("_")[1]
    # !!!! –Ω–∞–¥–æ –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –Ω–∞ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –≤ –∫–Ω–æ–ø–∫–∞—Ö
    # –∏ –¥–æ–±–∞–≤–∏—Ç—å –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—É–¥–∞
    # –ø—Ä–æ–≤–µ—Ä—è—Ç—å –µ—ë —Å –¥–∞—Ç–æ–π –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ —Ç–∞–∫–∞—è –±—ã–ª–∞, —Ç–æ 
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    path = global_objects.tree_data.get_id_to_path(int(path_id))
    await menu.get_message(callback.message, path=path, replace=True)
'''

@router.callback_query(F.data.startswith("b_"))
async def callbacks_num(callback: CallbackQuery):
    #print(callback.data)
    path_id = callback.data.split("_")[1]
    path = global_objects.tree_data.get_id_to_path(int(path_id))
    await menu.get_message(callback.message, path=path, replace=True)


@router.callback_query(F.data.startswith("fix_"))
async def callbacks_fix(callback: CallbackQuery):
    #print(callback.data)
    path_id = callback.data.split("_")[1]
    path = global_objects.tree_data.get_id_to_path(int(path_id))
    current_text = callback.message.text
    current_text = 'üìå\n\n' + current_text
    current_keyboard = callback.message.reply_markup

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–π
    if current_keyboard and len(current_keyboard.inline_keyboard) > 0:
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω—é—é –∫–Ω–æ–ø–∫—É –∏–∑ –ø–µ—Ä–≤–æ–≥–æ —Ä—è–¥–∞
        current_keyboard.inline_keyboard.pop(-2)
    await sql_mgt.set_param(callback.message.chat.id, 'LAST_MEDIA_LIST', '')
    await sql_mgt.set_param(callback.message.chat.id, 'DELETE_LAST_MESSAGE', '')
    await sql_mgt.set_param(callback.message.chat.id, 'LAST_MESSAGE_ID', '0')
    await global_objects.bot.edit_message_text(chat_id=callback.message.chat.id,
                                message_id=callback.message.message_id,
                                text=current_text,
                                #reply_markup=current_keyboard
                                )
    await global_objects.bot.pin_chat_message(
        chat_id=callback.message.chat.id,
        message_id=callback.message.message_id
    )
    await menu.get_message(
        callback.message,
        path=path,
        replace=False
    )

@router.callback_query(F.data.startswith("site_"))
async def callbacks_site(callback: CallbackQuery):
    pass
    '''
    await menu.get_message(
        callback.message,
        path='',
        replace=False
    )
    '''